---
import { Image } from "astro:assets";
import { getRelativeLocaleUrl } from "astro:i18n";
import LanguageSwitcher from "@/components/LanguageSwitcher/LanguageSwitcher.astro";
import { languages } from "@/i18n/ui";
import { useTranslations } from "@/i18n/utils";
import { computeRel } from "@/lib/utils";
import logo from "../../assets/logo.png";
import MobileNav from "./MobileNav.tsx";

const currentLang = Astro.currentLocale || "en";
const t = useTranslations(currentLang as "en" | "ja");
const pathname = Astro.url.pathname;

const REPO_SLUG = import.meta.env.BASE_URL
  ? import.meta.env.BASE_URL.replace(/^\/+|\/+$/g, "")
  : "";

const LOCALES = Object.keys(languages) as Array<keyof typeof languages>;

const rel = computeRel(pathname, REPO_SLUG, LOCALES);

// If rel is empty, it means the root page
const languageUrls = Object.fromEntries(
  Object.keys(languages).map((lang) => [
    lang,
    rel ? getRelativeLocaleUrl(lang, rel) : getRelativeLocaleUrl(lang),
  ]),
);
---

<header class="w-full border-b bg-white sticky top-0 z-50">
  <div class="container mx-auto px-4 py-3 flex items-center justify-between">
    <a href={getRelativeLocaleUrl(currentLang, "")} class="flex items-center gap-3">
      <Image src={logo} alt="ub-MOJI logo" width={40} height={40} class="h-8 w-8 object-contain" loading="eager" />
      <span class="text-lg font-semibold text-gray-900 tracking-tight">{t('site.title')}</span>
    </a>

    <div class="flex items-center gap-4">
      <!-- Desktop nav -->
  <nav class="hidden md:flex gap-6 text-sm text-gray-700 font-medium">
        <a href={getRelativeLocaleUrl(currentLang, "papers")}>{t('nav.papers')}</a>
        <a href={getRelativeLocaleUrl(currentLang, "news")}>{t('nav.news')}</a>
      </nav>

      <!-- Language switcher -->
      <div class="hidden md:block">
        <LanguageSwitcher />
      </div>

      <!-- Mobile nav (React Island) -->
      <div class="md:hidden">
        <MobileNav 
          currentLang={currentLang}
          papersText={t('nav.papers')}
          papersUrl={getRelativeLocaleUrl(currentLang, "papers")}
          newsText={t('nav.news')}
          newsUrl={getRelativeLocaleUrl(currentLang, "news")}
          languages={languages}
          languageUrls={languageUrls}
          client:load 
        />
      </div>
    </div>
  </div>
</header>
