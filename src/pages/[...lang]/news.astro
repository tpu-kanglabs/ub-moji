---
import Footer from "@/components/Footer.astro";
import Header from "@/components/Header/index.astro";
import NewsCard from "@/components/News/NewsCard.astro";
import Layout from "@/layouts/Layout.astro";
import { useTranslations } from "@/lib/i18n";
import { DEFAULT_LOCALE, LOCALES, isLocale } from "@/lib/locales";
import {
  type NewsEntry,
  extractLogicalSlugFromEntry,
  getNewsByLocale,
} from "@/lib/news";

export async function getStaticPaths() {
  return [
    { params: { lang: undefined } }, // → `/news` (default locale)
    { params: { lang: "en" } }, // → `/en/news`
    { params: { lang: "ja" } }, // → `/ja/news`
  ];
}

const raw = Astro.params.lang;
const lang = isLocale(raw) ? raw : DEFAULT_LOCALE; // fallback to default locale
const t = useTranslations(lang);

// Get posts based on locale from Content Collections
const posts = await getNewsByLocale(lang);

const sorted = posts.sort((a, b) => {
  const ad = new Date(a.data.pubDate).getTime();
  const bd = new Date(b.data.pubDate).getTime();
  return bd - ad;
});

const fmt = new Intl.DateTimeFormat(lang as string, {
  year: "numeric",
  month: "short",
  day: "2-digit",
});

const baseUrl = import.meta.env.BASE_URL || "/";
---

<Layout>
  <Header />

  <main class="container mx-auto px-4 py-10 min-h-screen">
    <h1 class="text-3xl font-bold tracking-tight text-gray-900 mb-6">{t('news.title')}</h1>
    <p class="text-gray-600 mb-6">{t('news.description')}</p>

    {sorted.length === 0 ? (
      <p class="text-gray-600">{t('news.empty')}</p>
    ) : (
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {sorted.map((post) => {
          const d = post.data.pubDate;
          const iso = d ? String(d) : undefined;
          const label = d ? fmt.format(new Date(d)) : undefined;
          
          // Generate URL based on locale using logical slug
          const logicalSlug = extractLogicalSlugFromEntry(post);
          const url = lang === 'ja' ? `${baseUrl}/ja/news/${logicalSlug}` : `${baseUrl}/news/${logicalSlug}`;
          
          return (
            <NewsCard
              url={url}
              title={post.data.title}
              description={post.data.description}
              dateISO={iso}
              dateLabel={label}
              tags={post.data.tags}
            />
          );
        })}
      </div>
    )}
  </main>

  <Footer />
</Layout>