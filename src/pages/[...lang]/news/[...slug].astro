---
import { getRelativeLocaleUrl } from "astro:i18n";
import Footer from "@/components/Footer.astro";
import Header from "@/components/Header/index.astro";
import Layout from "@/layouts/Layout.astro";
import { createT } from "@/lib/i18n";
import { DEFAULT_LOCALE, LOCALES, isLocale } from "@/lib/locales";

export async function getStaticPaths() {
  const paths = [];

  // Get English news posts
  const enPosts = await Astro.glob("../../news/*.md");
  for (const post of enPosts) {
    const slug = post.file.split("/").pop()?.replace(".md", "") || "";
    
    // Default locale: /news/slug
    paths.push({
      params: { lang: [], slug: [slug] },
      props: { post, locale: "en" },
    });
    
    // Explicit en: /en/news/slug
    paths.push({
      params: { lang: ["en"], slug: [slug] },
      props: { post, locale: "en" },
    });
  }

  // Get Japanese news posts
  const jaPosts = await Astro.glob("../../ja/news/*.md");
  for (const post of jaPosts) {
    const slug = post.file.split("/").pop()?.replace(".md", "") || "";
    
    // Japanese locale: /ja/news/slug
    paths.push({
      params: { lang: ["ja"], slug: [slug] },
      props: { post, locale: "ja" },
    });
  }

  return paths;
}

const raw = Astro.params.lang?.[0];
const lang = isLocale(raw) ? raw : DEFAULT_LOCALE;
const t = createT(lang);
const { post } = Astro.props;

const { Content } = await post.render();
---

<Layout>
  <Header />

  <main class="container mx-auto px-4 py-10 min-h-screen">
    <nav class="mb-6">
      <a href={getRelativeLocaleUrl(lang, "news")} class="text-blue-600 hover:underline">
        ‚Üê {t("news.backToList")}
      </a>
    </nav>

    <article class="prose prose-lg max-w-4xl mx-auto">
      <header class="mb-8">
        <h1 class="text-3xl font-bold text-gray-900 mb-4">
          {post.frontmatter.title}
        </h1>
        {post.frontmatter.pubDate && (
          <time class="text-gray-600">
            {new Intl.DateTimeFormat(lang, {
              year: "numeric",
              month: "long",
              day: "numeric",
            }).format(new Date(post.frontmatter.pubDate))}
          </time>
        )}
      </header>
      
      <div class="text-gray-800 leading-relaxed">
        <Content />
      </div>
    </article>
  </main>

  <Footer />
</Layout>